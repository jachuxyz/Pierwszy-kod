import random

class PhotographerGame:
    def __init__(self):
        self.budget = 5000
        self.equipment_prices = {"Sony": 3000, "Canon": 3000, "Nikon": 3500,
                                 "Sigma 30mm f 1.4": 1000, "Tamron 28-75 mm f 2.8": 2000, "Samyang 85 mm f 1.4": 1500}
        self.cities = {"Warszawa": ["Porsche 911 GT3", "BMW M4 CSL", "Opel Meriva"],
                       "Kraków": ["BMW M4 CSL", "Honda Civic Type R", "Fiat Uno"],
                       "Wrocław": ["BMW M5 C", "Audi RS7", "BMW M4 CSL"],
                       "Gdańsk": ["BMW M4 CSL", "Honda Civic Type R", "Fiat Uno"]}
        self.car_earnings = {"Porsche 911 GT3": 1500, "BMW M4 CSL": 1500, "Opel Meriva": 2000,
                             "Honda Civic Type R": 200, "Fiat Uno": 100, "BMW M5 C": 400, "Audi RS7": 1500}
        self.platform_multipliers = {"Instagram": 3, "TikTok": 1, "Facebook": 2}
        self.hypercar_cities = ["Monaco", "Londyn"]
        self.hypercars = {"Ferrari LaFerrari": 1400000, "Lamborghini Aventador": 417826,
                          "Bugatti Veyron": 1500000, "McLaren P1": 1150000}
        self.abroad_cities = {"Monaco": ["Ferrari LaFerrari", "Lamborghini Aventador", "Bugatti Veyron", "McLaren P1"],
                              "Londyn": ["Ferrari LaFerrari", "Lamborghini Aventador", "Bugatti Veyron", "McLaren P1"],
                              "Berlin": ["Porsche 911 GT3", "Fiat 125p", "BMW Xi7"]}
        self.abroad_earnings = {"Ferrari LaFerrari": 5000, "Lamborghini Aventador": 10000, "Bugatti Veyron": 7000,
                                "McLaren P1": 20000, "Porsche 911 GT3": 12000, "Fiat 125p": 50000, "BMW Xi7": 10000}
        self.game_loop()

    def game_loop(self):
        name = input("Podaj swoje imię: ")
        age = int(input("Podaj swój wiek: "))
        print(f"Witaj {name}! Masz {age} lat.")

        while True:
            print(f"\nAktualny budżet: {self.budget} zł")
            camera_choice = self.choose_equipment("aparat", ["Sony", "Canon", "Nikon"])
            lens_choice = self.choose_equipment("obiektyw", ["Sigma 30mm f 1.4", "Tamron 28-75 mm f 2.8", "Samyang 85 mm f 1.4"])
            city_choice = self.choose_location()

            car_choice = self.choose_car(city_choice)
            earnings = self.calculate_earnings(car_choice)
            total_earnings = earnings

            self.budget += total_earnings
            print(f"\nZdjęcie {car_choice} w {city_choice} przyniosło {earnings} zł.")
            self.publish_photos({car_choice: earnings})

            print(f"\nTwój budżet po zrobieniu zdjęcia wynosi: {self.budget} zł.")

            if self.budget >= 5000:
                travel_choice = input("Chcesz robić zdjęcia za granicą? (T/N): ").upper()
                if travel_choice == "T":
                    destination_choice = self.choose_destination()
                    abroad_car_choice = self.choose_car(destination_choice, abroad=True)
                    abroad_earnings = self.calculate_earnings(abroad_car_choice, abroad=True)
                    total_earnings += abroad_earnings

                    print(f"\nZdjęcie {abroad_car_choice} w {destination_choice} przyniosło {abroad_earnings} zł.")
                    self.publish_photos({abroad_car_choice: abroad_earnings}, abroad=True)

                    if self.budget >= 150000:
                        end_choice = input("Zarobiłeś już tak dużo! Co chcesz zrobić? "
                                           "1. Zostać rentierem i nie pracować więcej, "
                                           "2. Założyć fundację i zacząć od nowa (wpisz numer): ")
                        if end_choice == "1":
                            print(f"Gratulacje {name}! Zostałeś rentierem i nie pracujesz już do końca życia.")
                            break
                        elif end_choice == "2":
                            print(f"{name}, założyłeś fundację i zaczynasz grę od nowa. Powodzenia!")
                            self.__init__()
                            break
                else:
                    print(f"{name}, decyzja podjęta. Kontynuuj swoją karierę fotografa samochodowego.")
            else:
                print(f"{name}, kontynuuj swoją karierę fotografa samochodowego.")

    def choose_equipment(self, equipment_type, equipment_options):
        print(f"\nWybierz swój {equipment_type}. Masz do wyboru:")
        for option, price in self.equipment_prices.items():
            if option in equipment_options and self.budget >= price:
                print(f"{option} - cena: {price} zł")

        while True:
            choice = input(f"Wprowadź nazwę wybranego {equipment_type}: ")
            if choice in equipment_options and self.budget >= self.equipment_prices[choice]:
                self.budget -= self.equipment_prices[choice]
                print(f"Wybrano {choice}. Pozostały budżet: {self.budget} zł.")
                return choice
            else:
                print("Wprowadź poprawną nazwę lub nie masz wystarczająco środków.")

    def choose_location(self):
        print("\nWybierz miasto, w którym chcesz robić zdjęcia. Masz do wyboru:")
        for city in self.cities.keys():
            print(city)

        while True:
            choice = input("Wprowadź nazwę wybranego miasta: ")
            if choice in self.cities:
                print(f"Wybrano {choice}.")
                return choice
            else:
                print("Wprowadź poprawną nazwę miasta.")

    def choose_car(self, city, abroad=False):
        print("\nWybierz samochód, któremu chcesz zrobić zdjęcie. Masz do wyboru:")
        if abroad and city in self.abroad_cities:
            cars = self.abroad_cities[city]
        elif city in self.hypercar_cities:
            cars = self.hypercars.keys()
        else:
            cars = self.cities[city]

        for car in cars:
            print(car)

        while True:
            choice = input("Wprowadź nazwę wybranego samochodu: ")
            if choice in cars:
                print(f"Wybrano {choice}.")
                return choice
            else:
                print("Wprowadź poprawną nazwę samochodu.")

    def calculate_earnings(self, car, abroad=False):
        if abroad and car in self.abroad_earnings:
            return self.abroad_earnings[car]
        else:
            return self.car_earnings[car]

    def publish_photos(self, photo_earnings, abroad=False):
        print("\nTeraz możesz opublikować swoje zdjęcia na platformach: Instagram, TikTok, Facebook.")
        print("Pamiętaj, że stawki są różne w zależności od platformy.")
        print("Wybierz, gdzie chcesz opublikować swoje zdjęcia:")
        for platform, multiplier in self.platform_multipliers.items():
            print(f"{platform} - stawka x{multiplier}")

        total_earnings = 0
        for car, earnings in photo_earnings.items():
            print(f"\nZdjęcie {car}:")
            for platform, multiplier in self.platform_multipliers.items():
                platform_choice = input(f"Czy chcesz opublikować na {platform}? (T/N): ").upper()
                if platform_choice == "T":
                    earnings += self.calculate_earnings(car, abroad) * multiplier
                    print(f"Zdjęcie {car} opublikowane na {platform}!")

            total_earnings += earnings

        print(f"\nGratulacje! Zdobyłeś {total_earnings} zł.")
        self.budget += total_earnings

    def choose_destination(self):
        print("\nWybierz miejsce, do którego chcesz polecieć: Monaco, Londyn, Berlin.")
        while True:
            choice = input("Wprowadź numer wybranej destynacji: ")
            if choice in {"1", "2", "3"}:
                destinations = {1: "Monaco", 2: "Londyn", 3: "Berlin"}
                chosen_destination = destinations[int(choice)]
                print(f"Wybrano {chosen_destination}.")
                return chosen_destination
            else:
                print("Wprowadź poprawny numer.")

if __name__ == "__main__":
    game = PhotographerGame()





import time
import random

class PrisonEscapeGame:
    def __init__(self):
        self.health = 100
        self.money = 0
        self.items = []
        self.allies = []
        self.enemies = ["Strażnik", "Psie Patrol", "Kierownik więzienia"]
        self.escape_attempts = 0
        self.days_left = 30
        self.job_days = 0
        self.police_alert_level = 0
        self.game_loop()

    def print_status(self):
        print(f"\nZdrowie: {self.health}")
        print(f"Pieniądze: {self.money} zł")
        print(f"Przedmioty: {', '.join(self.items)}")
        print(f"Sojusznicy: {', '.join(self.allies)}")
        print(f"Liczba prób ucieczki: {self.escape_attempts}")
        print(f"Pozostałe dni: {self.days_left}")
        print(f"Liczba dni przepracowanych: {self.job_days}")
        print(f"Poziom alarmu: {self.police_alert_level}")

    def encounter_enemy(self):
        enemy = random.choice(self.enemies)
        print(f"\nNiebezpieczeństwo! Napotkałeś: {enemy}")
        input("Naciśnij Enter, aby kontynuować...")
        enemy_strength = random.randint(20, 50)
        return enemy, enemy_strength

    def fight_enemy(self, enemy, enemy_strength):
        print(f"\nWalka z {enemy}!")
        while self.health > 0 and enemy_strength > 0:
            player_attack = random.randint(10, 25)
            enemy_attack = random.randint(5, 20)

            print(f"Atakujesz {enemy} i zadajesz {player_attack} obrażeń.")
            print(f"{enemy} kontratakuje i zadaje {enemy_attack} obrażeń.")

            self.health -= enemy_attack
            enemy_strength -= player_attack

            time.sleep(1)

        if self.health <= 0:
            print("Przegrałeś walkę. Jesteś zbyt słaby, aby uciec.")
            self.end_game()
        else:
            print(f"Wygrałeś walkę z {enemy}! Uzyskujesz przewagę w ucieczce.")

    def escape_attempt(self):
        self.escape_attempts += 1
        print("\nPróbujesz uciec z więzienia...")
        time.sleep(2)
        escape_chance = random.randint(1, 100)

        if escape_chance > 50:
            print("Udało się! Uciekłeś z więzienia!")
            self.end_game(win=True)
        else:
            print("Nie udało się. Zostałeś złapany.")
            self.fight_enemy(*self.encounter_enemy())

    def explore_cell(self):
        print("\nEksplorujesz swoją celę...")
        time.sleep(2)
        discovery_chance = random.randint(1, 100)

        if discovery_chance <= 30:
            print("Znalazłeś ukryty przedmiot!")
            self.items.append("Mapa uwięzionego")
        elif 30 < discovery_chance <= 60:
            print("Nie znalazłeś niczego ciekawego.")
        else:
            print("Odkryłeś sekretny tunel! Możesz użyć go do ucieczki.")

    def interact_with_inmates(self):
        print("\nWchodzisz w interakcję z innymi więźniami...")
        time.sleep(2)
        interaction_chance = random.randint(1, 100)

        if interaction_chance <= 40:
            print("Zdobywasz przydatne informacje od innego więźnia.")
            self.items.append("Klucz do drzwi")
        elif 40 < interaction_chance <= 70:
            print("Inny więzień próbuje cię okraść. Tracisz trochę zdrowia.")
            self.health -= random.randint(10, 30)
        else:
            print("Zaprzyjaźniasz się z innym więźniem. Może w przyszłości ci pomoże.")
            self.allies.append("Sojusznik więzienny")

    def prison_job(self):
        print("\nPracujesz w więziennej kantynie...")
        time.sleep(2)
        earnings = random.randint(10, 50)
        self.money += earnings
        self.job_days += 1
        self.police_alert_level += random.randint(1, 5)
        print(f"Zarobiłeś {earnings} zł.")

    def prison_store(self):
        print("\nOdwiedzasz sklep więzienny...")
        time.sleep(2)
        print("Co chciałbyś kupić?")
        print("1. Apteczka (50 zł)")
        print("2. Kij baseballowy (30 zł)")
        print("3. Kawa (10 zł)")
        print("4. Powrót do celi")

        choice = input("Wybierz numer opcji: ")

        if choice == "1" and self.money >= 50:
            print("Kupiłeś apteczkę. Zdrowie zostało zwiększone.")
            self.health += 20
            self.money -= 50
        elif choice == "2" and self.money >= 30:
            print("Kupiłeś kij baseballowy. Może się przydać w walce.")
            self.items.append("Kij baseballowy")
            self.money -= 30
        elif choice == "3" and self.money >= 10:
            print("Kupiłeś kawę. Odzyskujesz trochę zdrowia.")
            self.health += 10
            self.money -= 10
        elif choice == "4":
            print("Wracasz do celi.")
        else:
            print("Nie masz wystarczająco pieniędzy na zakup tego przedmiotu.")

    def game_loop(self):
        print("Witaj w grze o ucieczce z więzienia!")
        print("Twoim celem jest uciec przed upływem 30 dni.")
        print("Oto kilka opcji, które masz do dyspozycji każdego dnia:")
        while self.days_left > 0:
            self.print_status()
            print("\nCo chcesz zrobić?")
            print("1. Próbuj ucieczki")
            print("2. Stocz walkę z wrogiem")
            print("3. Eksploruj swoją celę")
            print("4. Rozmawiaj z innymi więźniami")
            print("5. Pracuj w więziennej kantynie")
            print("6. Odwiedź sklep więzienny")
            print("7. Zakończ grę")

            choice = input("Wybierz numer opcji: ")

            if choice == "1":
                self.escape_attempt()
            elif choice == "2":
                self.fight_enemy(*self.encounter_enemy())
            elif choice == "3":
                self.explore_cell()
            elif choice == "4":
                self.interact_with_inmates()
            elif choice == "5":
                self.prison_job()
            elif choice == "6":
                self.prison_store()
            elif choice == "7":
                self.end_game()
            else:
                print("Wprowadziłeś niepoprawny numer. Spróbuj ponownie.")

            self.days_left -= 1

        print("Koniec gry. Skończył się czas. Dziękujemy za udział!")
        exit()

    def end_game(self, win=False):
        if win:
            print("Gratulacje! Udało ci się uciec z więzienia!")
        else:
            print("Koniec gry. Dziękujemy za udział!")
        exit()

if __name__ == "__main__":
    game = PrisonEscapeGame()

